"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.InstallationsRouter = void 0;
var _ClassesRouter = _interopRequireDefault(require("./ClassesRouter"));
var _rest = _interopRequireDefault(require("../rest"));
var _middlewares = require("../middlewares");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
// InstallationsRouter.js

class InstallationsRouter extends _ClassesRouter.default {
  className() {
    return '_Installation';
  }
  handleFind(req) {
    const body = Object.assign(req.body, _ClassesRouter.default.JSONFromQuery(req.query));
    const options = _ClassesRouter.default.optionsFromBody(body);
    return _rest.default.find(req.config, req.auth, '_Installation', body.where, options, req.info.clientSDK, req.info.context).then(response => {
      return {
        response: response
      };
    });
  }
  mountRoutes() {
    this.route('GET', '/installations', req => {
      return this.handleFind(req);
    });
    this.route('GET', '/installations/:objectId', req => {
      return this.handleGet(req);
    });
    this.route('POST', '/installations', _middlewares.promiseEnsureIdempotency, req => {
      return this.handleCreate(req);
    });
    this.route('PUT', '/installations/:objectId', _middlewares.promiseEnsureIdempotency, req => {
      return this.handleUpdate(req);
    });
    this.route('DELETE', '/installations/:objectId', req => {
      return this.handleDelete(req);
    });
  }
}
exports.InstallationsRouter = InstallationsRouter;
var _default = InstallationsRouter;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfQ2xhc3Nlc1JvdXRlciIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX3Jlc3QiLCJfbWlkZGxld2FyZXMiLCJvYmoiLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsIkluc3RhbGxhdGlvbnNSb3V0ZXIiLCJDbGFzc2VzUm91dGVyIiwiY2xhc3NOYW1lIiwiaGFuZGxlRmluZCIsInJlcSIsImJvZHkiLCJPYmplY3QiLCJhc3NpZ24iLCJKU09ORnJvbVF1ZXJ5IiwicXVlcnkiLCJvcHRpb25zIiwib3B0aW9uc0Zyb21Cb2R5IiwicmVzdCIsImZpbmQiLCJjb25maWciLCJhdXRoIiwid2hlcmUiLCJpbmZvIiwiY2xpZW50U0RLIiwiY29udGV4dCIsInRoZW4iLCJyZXNwb25zZSIsIm1vdW50Um91dGVzIiwicm91dGUiLCJoYW5kbGVHZXQiLCJwcm9taXNlRW5zdXJlSWRlbXBvdGVuY3kiLCJoYW5kbGVDcmVhdGUiLCJoYW5kbGVVcGRhdGUiLCJoYW5kbGVEZWxldGUiLCJleHBvcnRzIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi9zcmMvUm91dGVycy9JbnN0YWxsYXRpb25zUm91dGVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEluc3RhbGxhdGlvbnNSb3V0ZXIuanNcblxuaW1wb3J0IENsYXNzZXNSb3V0ZXIgZnJvbSAnLi9DbGFzc2VzUm91dGVyJztcbmltcG9ydCByZXN0IGZyb20gJy4uL3Jlc3QnO1xuaW1wb3J0IHsgcHJvbWlzZUVuc3VyZUlkZW1wb3RlbmN5IH0gZnJvbSAnLi4vbWlkZGxld2FyZXMnO1xuXG5leHBvcnQgY2xhc3MgSW5zdGFsbGF0aW9uc1JvdXRlciBleHRlbmRzIENsYXNzZXNSb3V0ZXIge1xuICBjbGFzc05hbWUoKSB7XG4gICAgcmV0dXJuICdfSW5zdGFsbGF0aW9uJztcbiAgfVxuXG4gIGhhbmRsZUZpbmQocmVxKSB7XG4gICAgY29uc3QgYm9keSA9IE9iamVjdC5hc3NpZ24ocmVxLmJvZHksIENsYXNzZXNSb3V0ZXIuSlNPTkZyb21RdWVyeShyZXEucXVlcnkpKTtcbiAgICBjb25zdCBvcHRpb25zID0gQ2xhc3Nlc1JvdXRlci5vcHRpb25zRnJvbUJvZHkoYm9keSk7XG4gICAgcmV0dXJuIHJlc3RcbiAgICAgIC5maW5kKFxuICAgICAgICByZXEuY29uZmlnLFxuICAgICAgICByZXEuYXV0aCxcbiAgICAgICAgJ19JbnN0YWxsYXRpb24nLFxuICAgICAgICBib2R5LndoZXJlLFxuICAgICAgICBvcHRpb25zLFxuICAgICAgICByZXEuaW5mby5jbGllbnRTREssXG4gICAgICAgIHJlcS5pbmZvLmNvbnRleHRcbiAgICAgIClcbiAgICAgIC50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgcmV0dXJuIHsgcmVzcG9uc2U6IHJlc3BvbnNlIH07XG4gICAgICB9KTtcbiAgfVxuXG4gIG1vdW50Um91dGVzKCkge1xuICAgIHRoaXMucm91dGUoJ0dFVCcsICcvaW5zdGFsbGF0aW9ucycsIHJlcSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5oYW5kbGVGaW5kKHJlcSk7XG4gICAgfSk7XG4gICAgdGhpcy5yb3V0ZSgnR0VUJywgJy9pbnN0YWxsYXRpb25zLzpvYmplY3RJZCcsIHJlcSA9PiB7XG4gICAgICByZXR1cm4gdGhpcy5oYW5kbGVHZXQocmVxKTtcbiAgICB9KTtcbiAgICB0aGlzLnJvdXRlKCdQT1NUJywgJy9pbnN0YWxsYXRpb25zJywgcHJvbWlzZUVuc3VyZUlkZW1wb3RlbmN5LCByZXEgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlQ3JlYXRlKHJlcSk7XG4gICAgfSk7XG4gICAgdGhpcy5yb3V0ZSgnUFVUJywgJy9pbnN0YWxsYXRpb25zLzpvYmplY3RJZCcsIHByb21pc2VFbnN1cmVJZGVtcG90ZW5jeSwgcmVxID0+IHtcbiAgICAgIHJldHVybiB0aGlzLmhhbmRsZVVwZGF0ZShyZXEpO1xuICAgIH0pO1xuICAgIHRoaXMucm91dGUoJ0RFTEVURScsICcvaW5zdGFsbGF0aW9ucy86b2JqZWN0SWQnLCByZXEgPT4ge1xuICAgICAgcmV0dXJuIHRoaXMuaGFuZGxlRGVsZXRlKHJlcSk7XG4gICAgfSk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgSW5zdGFsbGF0aW9uc1JvdXRlcjtcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEsSUFBQUEsY0FBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsS0FBQSxHQUFBRixzQkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUUsWUFBQSxHQUFBRixPQUFBO0FBQTBELFNBQUFELHVCQUFBSSxHQUFBLFdBQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUEsS0FBQUUsT0FBQSxFQUFBRixHQUFBO0FBSjFEOztBQU1PLE1BQU1HLG1CQUFtQixTQUFTQyxzQkFBYSxDQUFDO0VBQ3JEQyxTQUFTQSxDQUFBLEVBQUc7SUFDVixPQUFPLGVBQWU7RUFDeEI7RUFFQUMsVUFBVUEsQ0FBQ0MsR0FBRyxFQUFFO0lBQ2QsTUFBTUMsSUFBSSxHQUFHQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0gsR0FBRyxDQUFDQyxJQUFJLEVBQUVKLHNCQUFhLENBQUNPLGFBQWEsQ0FBQ0osR0FBRyxDQUFDSyxLQUFLLENBQUMsQ0FBQztJQUM1RSxNQUFNQyxPQUFPLEdBQUdULHNCQUFhLENBQUNVLGVBQWUsQ0FBQ04sSUFBSSxDQUFDO0lBQ25ELE9BQU9PLGFBQUksQ0FDUkMsSUFBSSxDQUNIVCxHQUFHLENBQUNVLE1BQU0sRUFDVlYsR0FBRyxDQUFDVyxJQUFJLEVBQ1IsZUFBZSxFQUNmVixJQUFJLENBQUNXLEtBQUssRUFDVk4sT0FBTyxFQUNQTixHQUFHLENBQUNhLElBQUksQ0FBQ0MsU0FBUyxFQUNsQmQsR0FBRyxDQUFDYSxJQUFJLENBQUNFLE9BQU8sQ0FDakIsQ0FDQUMsSUFBSSxDQUFDQyxRQUFRLElBQUk7TUFDaEIsT0FBTztRQUFFQSxRQUFRLEVBQUVBO01BQVMsQ0FBQztJQUMvQixDQUFDLENBQUM7RUFDTjtFQUVBQyxXQUFXQSxDQUFBLEVBQUc7SUFDWixJQUFJLENBQUNDLEtBQUssQ0FBQyxLQUFLLEVBQUUsZ0JBQWdCLEVBQUVuQixHQUFHLElBQUk7TUFDekMsT0FBTyxJQUFJLENBQUNELFVBQVUsQ0FBQ0MsR0FBRyxDQUFDO0lBQzdCLENBQUMsQ0FBQztJQUNGLElBQUksQ0FBQ21CLEtBQUssQ0FBQyxLQUFLLEVBQUUsMEJBQTBCLEVBQUVuQixHQUFHLElBQUk7TUFDbkQsT0FBTyxJQUFJLENBQUNvQixTQUFTLENBQUNwQixHQUFHLENBQUM7SUFDNUIsQ0FBQyxDQUFDO0lBQ0YsSUFBSSxDQUFDbUIsS0FBSyxDQUFDLE1BQU0sRUFBRSxnQkFBZ0IsRUFBRUUscUNBQXdCLEVBQUVyQixHQUFHLElBQUk7TUFDcEUsT0FBTyxJQUFJLENBQUNzQixZQUFZLENBQUN0QixHQUFHLENBQUM7SUFDL0IsQ0FBQyxDQUFDO0lBQ0YsSUFBSSxDQUFDbUIsS0FBSyxDQUFDLEtBQUssRUFBRSwwQkFBMEIsRUFBRUUscUNBQXdCLEVBQUVyQixHQUFHLElBQUk7TUFDN0UsT0FBTyxJQUFJLENBQUN1QixZQUFZLENBQUN2QixHQUFHLENBQUM7SUFDL0IsQ0FBQyxDQUFDO0lBQ0YsSUFBSSxDQUFDbUIsS0FBSyxDQUFDLFFBQVEsRUFBRSwwQkFBMEIsRUFBRW5CLEdBQUcsSUFBSTtNQUN0RCxPQUFPLElBQUksQ0FBQ3dCLFlBQVksQ0FBQ3hCLEdBQUcsQ0FBQztJQUMvQixDQUFDLENBQUM7RUFDSjtBQUNGO0FBQUN5QixPQUFBLENBQUE3QixtQkFBQSxHQUFBQSxtQkFBQTtBQUFBLElBQUE4QixRQUFBLEdBRWM5QixtQkFBbUI7QUFBQTZCLE9BQUEsQ0FBQTlCLE9BQUEsR0FBQStCLFFBQUEifQ==